Imports System.IO
Imports System.Data
Imports System.Data.SqlClient
Imports System.Data.OleDb
Imports System.Web
Imports System.Web.UI
Imports System.Web.UI.WebControls
Partial Public Class cusccrp_class
    Inherits detailspage
    Private FORMCODE As String = "CCRP"  'Hardcoded for customised form
    Private f_size As String
    Private lcnid As String
    'Generated by VI FEANDI SOFTLABS FORM GENERATOR (http://www.vifeandi.net) VER 2014.1
    Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load

        listingpage = "wlist.aspx"
        _FormsName = "Customer Complaint Report (CCR) - Packaging"
        TableName = "zcustom_ccr"
        IDPField = ""
        IDField = "cus_id"
        AppIDField = ""
        MerchantIDField = "cus_merchantid"
        FilterField = "cus_filter"
        APPCode = "WORKFLOW"
        AddRights = "" '"SM0001"
        DelRights = "" '"SM0003"
        ModRights = "" '"SM0002"
        ViewRights = "" '"SM0004"
        FullRights = "PK0005"
        NmSpace = "zcustom_ccrp"

        Call validationgroup()
        '********* MUST PUT *********
        wfb_bar.workflownamespace = NmSpace
        wfb_bar.custommode = True
        wfb_bar.overridemode = True

        wfb_bar.attachmentbycreatoronly = True

        '**************************

        If Page.IsPostBack = False Then
            cus_refno.Text = Request("rc") & ""
            lblrefno.Text = "<b>Auto Generated</b>"

            WebLib.setListItemsTable(cus_classification, "cc_classification", "cc_classification", "mstrcustcomplaint", "cc_classification asc", "", "", "'" & WebLib.FilterCode & "'", "cc_ccrtype = '" & FORMCODE & "' group by cc_classification ")
            cus_classification_SelectedIndexChanged(Me, EventArgs.Empty)
        End If
        createdt.Value = DateTime.Now
        Call InitLoad()


        '***** MUST PUT ******
        cus_refno.ReadOnly = True
        Call enabledisablecustomer()
        Call validationgroup()
        wfb_bar.parentobj = mp
        Call assigninitvalues()
        '**********************

        ShowCNDetail()


        'If lcnid = "" Or lcnstatus.Text = "Rejected" Or lcnstatus.Text = "Cancelled" Then
        If lcnid = "" Then
            Dim custcode As String = WebLib.GetValue("sysMerchant", "sm_code", "sm_name", "'" & cus_distributor.Text & "'", "", "")
            btnCN.Text = "Create Credit Note"
            btnCN.OnClientClick = "$.colorbox({iframe:true,opacity:0.5,trapFocus:true,reposition:true,scrolling:true,fixed:true,href: 'cn3.aspx?wp2=" & custcode.Trim & "&la=" & lblrefno.Text & "',width:'98%',height:'90%',maxWidth:'98%', maxHeight:'98%'});return false"

        Else
            btnCN.OnClientClick = "$.colorbox({iframe:true,opacity:0.5,trapFocus:true,reposition:true,scrolling:true,fixed:true,href: 'cn3.aspx?ga=" & lcnid & "&disabled=Y',width:'98%',height:'90%',maxWidth:'98%', maxHeight:'98%'});return false"

        End If

        If (wfb_bar.canAction()) Then
            lvlvalid.Value = "True"
        Else
            lvlvalid.Value = "False"
        End If
        cus_remarks.ValidationGroup = wfb_bar.wlevelAget().tostring.trim & "-"
        loadpr()



    End Sub

    Private Sub validationgroup()
        ' find tagging if new, else find old 
        If rid.Value = "" Then

            Dim lvl As Integer = getlvl(2)
            cus_investigatordate.ValidationGroup = lvl & "-"

            lvl = getlvl(3)
            cus_valid.ValidationGroup = lvl & "-"

            lvl = getlvl(4)
            cus_rootcause.ValidationGroup = lvl & "-"

            lvl = getlvl(5)
            cus_immediateaction.ValidationGroup = lvl & "-"
            cus_immediatedate.validationgroup = lvl & "-"

            lvl = getlvl(6)
            cus_cusaccept.ValidationGroup = lvl & "-"

        Else
            cus_investigatordate.ValidationGroup = backend.getLevelPC(2, rid.Value, NmSpace) & "-"
            cus_valid.ValidationGroup = backend.getLevelPC(3, rid.Value, NmSpace) & "-"
            cus_rootcause.ValidationGroup = backend.getLevelPC(4, rid.Value, NmSpace) & "-"
            cus_immediateaction.ValidationGroup = backend.getLevelPC(5, rid.Value, NmSpace) & "-"
            cus_immediatedate.ValidationGroup = backend.getLevelPC(5, rid.Value, NmSpace) & "-"
            cus_cusaccept.ValidationGroup = backend.getLevelPC(6, rid.Value, NmSpace) & "-"
        End If
    End Sub
    Private Function getlvl(ByVal lvl As Integer) As Integer

        Dim str As String = "select wui_no from workflowlink l inner join workflowitems i on l.wfl_wflowid = i.wui_wid where wfl_subcode = '" + FORMCODE + "' and wui_pno = " + lvl.ToString + ""

        Dim cn As New OleDbConnection(connectionstring)
        Dim cmd As New OleDbCommand()
        Dim ad As New OleDb.OleDbDataAdapter()
        Dim ds As New DataSet()
        Try
            cmd.CommandText = str
            cmd.Connection = cn
            ad.SelectCommand = cmd
            ad.Fill(ds, "datarecords")
            For Each dr As DataRow In ds.Tables("datarecords").Rows

                Return dr("wui_no") & ""

            Next
            cn.Close()
            cmd.Dispose()
            cn.Dispose()

        Catch ex As Exception
            ' lblMessage.Text = WebLib.getAlertMessageStyle(ex.Message)
            Return 0
        End Try
    End Function
    Private Sub enabledisablecustomer()
        'MUST PUT
        cus_distributor.Enabled = False
    End Sub
    Private Sub assigninitvalues()

    End Sub
    Private Function ValidateForm(Optional ByVal pType As String = "")
        lblMessage.Text = ""

        If cus_dateofcomplaint.enabled = True Then
            If cus_dateofcomplaint.datevalue = New DateTime(1991, 1, 1) Then
                lblMessage.Text = WebLib.getAlertMessageStyle("Please Enter Valid Date of Complaint")
                Return False
            End If
        End If

        If cus_valid.Enabled = True And wfb_bar.wlevelAPget().tostring.trim = "3" Then
            If cus_valid.SelectedIndex < 0 Then
                lblMessage.Text = WebLib.getAlertMessageStyle("Please Indicate Case is Valid")
                Return False
            End If
        End If

        If wfb_bar.wlevelAPget().tostring.trim = "4" Then
            If pType = "Approve" Then
                If cus_rootcause.Checked = True Then
                    Dim checkReport As Boolean = WebLib.CodeExists(WebLib.LoginUser.replace("'", "''"), "doc_createby", "docdoc", "doc_id", "", "doc_uniqueid", "'" & ucode.Value & "'", "", "", "doc_filter", " doc_createdt >= (select top 1 wfa_createon from workflowaudit where wfa_ucode = '" & ucode.Value & "' and wfa_level = " & Convert.ToInt32(wfb_bar.wlevelAget().tostring.trim) - 1 & " order by wfa_id desc) and doc_attach1 <> '' ")

                    If checkReport = False Then
                        lblMessage.Text = WebLib.getAlertMessageStyle("Attachment Required: RCA Report")
                        Return False
                    End If
                End If
            End If
        End If

        If cus_immediatedate.enabled = True And wfb_bar.wlevelAPget().tostring.trim = "5" Then
            If cus_immediatedate.datevalue = New DateTime(1991, 1, 1) Then
                lblMessage.Text = WebLib.getAlertMessageStyle("Please Enter Valid Immediate Action Date")
                Return False
            End If
        End If

        If cus_immediateaction.Enabled = True And wfb_bar.wlevelAPget().tostring.trim = "5" Then
            If cus_immediateaction.SelectedIndex < 0 Then
                lblMessage.Text = WebLib.getAlertMessageStyle("Please Select an Immediate Action")
                Return False
            End If
            If cus_immediateaction.SelectedValue = "Compensate" And pType = "Approve" Then
                If WebLib.GetValue("zcustom_dncn", "cus_uno", "cus_ccrno", "'" & lblrefno.Text & "'", "", "") = "" Then
                    lblMessage.Text = WebLib.getAlertMessageStyle("Please Create Credit Note")
                    Return False
                End If
            End If
        End If

        If cus_cusaccept.Enabled = True And wfb_bar.wlevelAPget().tostring.trim = "6" Then
            If cus_cusaccept.Checked = False Then
                lblMessage.Text = WebLib.getAlertMessageStyle("Please Indicate Case Accepted by Customer")
                Return False
            End If
        End If
        
        Return True
    End Function
    Public Sub backpagepage(ByVal sender As System.Object, ByVal e As System.EventArgs)
        Response.Redirect(WebLib.ClientURL(Redirector.PrevURL1))
    End Sub

    Public Sub SetFieldRights()

        Call wfb_bar.EnableDisable(mp)
        Exit Sub

    End Sub

    Public Overrides Function LoadData() As Boolean
        Dim cn As New OleDbConnection(connectionstring)
        Dim cmd As New OleDbCommand()
        Dim ad As New OleDb.OleDbDataAdapter()
        Dim ds As New DataSet()
        Dim counter As Integer = 0
        Dim dr As DataRow
        Dim templi As ListItem
        If IsNumeric(rid.Value) = False Then
            wfb_bar.uid = ""
            Call SetFieldRights()
            If (Request("wp2") & "").Trim <> "" Then '2 always use for custcode
                Dim obj As New RuntimeCustomer
                Call obj.getInfo((Request("wp2") & "").Trim)
                ccode.Value = (Request("wp2") & "").Trim
                cus_distributor.Text = obj.CustName & ""
                obj = Nothing
            Else
                Response.Redirect("cusccr_list.aspx")
            End If
            Exit Function
        End If

        Try
            cmd.CommandText = "Select * from " & TableName & " where cus_id=" & rid.Value
            cmd.Connection = cn
            ad.SelectCommand = cmd
            ad.Fill(ds, "datarecords")
            For Each dr In ds.Tables("datarecords").Rows

                counter = counter + 1
                cus_refno.Text = dr("cus_refno") & ""

                cus_distributor.Text = dr("cus_distributor") & ""
                cus_customer.Text = dr("cus_customer") & ""
                cus_location.Text = dr("cus_location") & ""
                cus_person.Text = dr("cus_person") & ""
                cus_telno.Text = dr("cus_telno") & ""
                cus_product.Text = dr("cus_product") & ""
                cus_dono.Text = dr("cus_dono") & ""

                cus_hp.Text = dr("cus_hp") & ""

                cus_cusaccept.Checked = IIf(dr("cus_cusaccept") Is DBNull.Value Or dr("cus_cusaccept") = "Yes" Or dr("cus_cusaccept") = "True", 1, 0)

                templi = cus_immediateaction.Items.FindByValue(dr("cus_immediateaction") & "")
                cus_immediateaction.SelectedIndex = cus_immediateaction.Items.IndexOf(templi)

                lblrefno.Text = dr("cus_uno") & ""
                cus_transporter.Text = dr("cus_transporter") & ""
                cus_qty.Text = dr("cus_qty") & ""
                cus_description.Text = dr("cus_description") & ""
                ' cus_investigatorremarks.Text = dr("cus_investigatorremarks") & ""

                Try
                    cus_investigatordate.Textdmy = dr("cus_investigatordate") & ""
                Catch ex As Exception
                End Try

                Try
                    cus_immediatedate.Textdmy = dr("cus_immediatedate") & ""
                Catch ex As Exception
                End Try

                Try
                    cus_dateofcomplaint.Textdmy = dr("cus_dateofcomplaint") & ""
                Catch ex As Exception
                End Try

                cus_classification.Text = dr("cus_classification") & ""
                cus_classification_SelectedIndexChanged(Me, EventArgs.Empty)
                cus_complaint.Text = dr("cus_complaint") & ""
                cus_rootcause.Checked = IIf(dr("cus_valid") = "Yes", 1, 0)

                If cus_immediateaction.SelectedValue = "Compensate" Then
                    btnCN.Visible = True
                End If

                templi = cus_valid.Items.FindByValue(dr("cus_valid") & "")
                cus_valid.SelectedIndex = cus_valid.Items.IndexOf(templi)
                ucode.Value = dr("cus_ucode") & ""
                wfb_bar.uid = ucode.Value
                createdt.Value = dr("cus_createdt").ToString.Trim
                Exit For
            Next
            cn.Close()
            cmd.Dispose()
            cn.Dispose()
            If wfb_bar.Workflowended = True Then
                btnsave.enabled = False
            Else
                btnsave.enabled = True
            End If

            Call SetFieldRights()


            loaddraft()


        Catch ex As Exception
            lblMessage.Text = WebLib.getAlertMessageStyle(ex.Message)
        End Try
    End Function
    Private Sub savedatadata(ByVal pWorkflowAction As Boolean, ByVal pType As String)

        '        Dim ScriptManager As ClientScriptManager = Page.ClientScript
        '       ScriptManager.RegisterStartupScript(Me.GetType(), "uniqueid" & System.Guid.NewGuid.ToString, "<script>$.blockUI({css: {border: 'none', padding: '15px', backgroundColor: '#000', '-webkit-border-radius': '10px', '-moz-border-radius': '10px', opacity: .5, color: '#fff'},message: '<h1>Processing....Please wait...</h1>' });</script>")


        Dim insertfields, insertvalues As String
        Dim lsrdesc As String = ""
        Dim lsql As String = ""
        insertfields = ""
        insertvalues = ""
        If ValidateForm(pType) = False Then
            Exit Sub
        End If

        Dim lcusdateofcomplaint As String = "NULL"
        If cus_dateofcomplaint.enabled = True Then
            If cus_dateofcomplaint.datevalue = New DateTime(1991, 1, 1) Then
                lcusdateofcomplaint = "NULL"
            Else
                lcusdateofcomplaint = "'" & WebLib.formatthedate(cus_dateofcomplaint.datevalue) & "'"
            End If
        End If

        Dim lcusinvestigatordate As String = "NULL"
        If cus_investigatordate.enabled = True Then
            If cus_investigatordate.datevalue = New DateTime(1991, 1, 1) Then
                lcusinvestigatordate = "NULL"
            Else
                lcusinvestigatordate = "'" & WebLib.formatthedate(cus_investigatordate.datevalue) & "'"
            End If
        End If

        Dim lcusimmediatedate As String = "NULL"
        If cus_immediatedate.enabled = True Then
            If cus_immediatedate.datevalue = New DateTime(1991, 1, 1) Then
                lcusimmediatedate = "NULL"
            Else
                lcusimmediatedate = "'" & WebLib.formatthedate(cus_immediatedate.datevalue) & "'"
            End If
        End If


        Try



            If rid.Value = "" Then
                ucode.Value = WebLib.getUniqueKey
                Dim lID As String
                lID = WebLib.GetValue("Workflowlink", "wfl_wflowid", "wfl_subcode", "'" & FORMCODE & "'", "", "")

                If IsNumeric(lID) = False Or (lID & "").Trim = "0" Then
                    lblMessage.Text = WebLib.getAlertMessageStyle("No Workflow Assign for this form")
                    Exit Sub
                End If

                'MUST ADD IN
                Dim lDocno As String = ""
                lDocno = WebLib.GetDocNo(NmSpace, "cus_uno", APPCode) & ""

                If lDocno.Trim = "" Then
                    lblMessage.Text = WebLib.getAlertMessageStyle("Document No. Not Set")
                    Exit Sub
                End If
                '*************************

                lsql = wfb_bar.GetWorkFlowSaveSQL(lID, ucode.Value, True, cus_refno.Text, NmSpace, "Customer Complaint Report (CCR)", cus_distributor.Text, lDocno)



                insertfields = insertfields & "cus_merchantid"
                insertvalues = insertvalues & "'" & WebLib.MerchantID.replace("'", "''") & "'"
                insertfields = insertfields & ",cus_filter"
                insertvalues = insertvalues & ",'" & WebLib.FilterCode.replace("'", "''") & "'"
                insertfields = insertfields & ",cus_ucode"
                insertvalues = insertvalues & ",'" & ucode.Value & "'"
                insertfields = insertfields & ",cus_refno"
                insertvalues = insertvalues & ",'" & cus_refno.Text.Replace("'", "''") & "'"
                insertfields = insertfields & ",cus_uno"
                insertvalues = insertvalues & ",'" & lDocno & "'"

                insertfields = insertfields & ",cus_type"
                insertvalues = insertvalues & ",'" & FORMCODE & "'"

                insertfields = insertfields & ",cus_distributor"
                insertvalues = insertvalues & ",'" & cus_distributor.Text.Replace("'", "''") & "'"
                insertfields = insertfields & ",cus_customer"
                insertvalues = insertvalues & ",'" & cus_customer.Text.Replace("'", "''") & "'"
                insertfields = insertfields & ",cus_location"
                insertvalues = insertvalues & ",'" & cus_location.Text.Replace("'", "''") & "'"
                insertfields = insertfields & ",cus_person"
                insertvalues = insertvalues & ",'" & cus_person.Text.Replace("'", "''") & "'"
                insertfields = insertfields & ",cus_telno"
                insertvalues = insertvalues & ",'" & cus_telno.Text.Replace("'", "''") & "'"
                insertfields = insertfields & ",cus_dateofcomplaint"
                insertvalues = insertvalues & "," & lcusdateofcomplaint & ""
                insertfields = insertfields & ",cus_product"
                insertvalues = insertvalues & ",'" & cus_product.Text.Replace("'", "''") & "'"
                insertfields = insertfields & ",cus_dono"
                insertvalues = insertvalues & ",'" & cus_dono.Text.Replace("'", "''") & "'"
                insertfields = insertfields & ",cus_transporter"
                insertvalues = insertvalues & ",'" & cus_transporter.Text.Replace("'", "''") & "'"
                insertfields = insertfields & ",cus_qty"
                insertvalues = insertvalues & ",'" & cus_qty.Text.Replace("'", "''") & "'"
                insertfields = insertfields & ",cus_description"
                insertvalues = insertvalues & ",'" & cus_description.Text.Replace("'", "''") & "'"
                insertfields = insertfields & ",cus_investigatordate"
                insertvalues = insertvalues & "," & lcusinvestigatordate & ""
                insertfields = insertfields & ",cus_valid"
                insertvalues = insertvalues & ",'" & cus_valid.SelectedValue & "'"
                insertfields = insertfields & ",cus_rootcause"
                insertvalues = insertvalues & "," & IIf(cus_valid.SelectedValue = "Yes", 1, 0) & ""


                insertfields = insertfields & ",cus_immediatedate"
                insertvalues = insertvalues & "," & lcusimmediatedate & ""


                insertfields = insertfields & ",cus_hp"
                insertvalues = insertvalues & ",'" & cus_hp.Text.Replace("'", "''") & "'"

                insertfields = insertfields & ",cus_cusaccept"
                insertvalues = insertvalues & ",'" & cus_cusaccept.Checked & "'"

                insertfields = insertfields & ",cus_immediateaction"
                insertvalues = insertvalues & ",'" & cus_immediateaction.SelectedValue & "'"

                insertfields = insertfields & ",cus_createby"
                insertvalues = insertvalues & ",'" & WebLib.LoginUser.replace("'", "''") & "'"
                insertfields = insertfields & ",cus_createdt"
                insertvalues = insertvalues & ",getdate()"
                insertfields = insertfields & ",cus_updateby"
                insertvalues = insertvalues & ",'" & WebLib.LoginUser.replace("'", "''") & "'"
                insertfields = insertfields & ",cus_updatedt"
                insertvalues = insertvalues & ",getdate()"
                insertfields = insertfields & ",cus_classification"
                insertvalues = insertvalues & ",'" & cus_classification.SelectedValue & "'"
                insertfields = insertfields & ",cus_complaint"
                insertvalues = insertvalues & ",'" & cus_complaint.SelectedValue & "'"



            Else
                If pWorkflowAction = True Then
                    lsql = wfb_bar.getapprovesql(pType)
                End If

                insertvalues = insertvalues & "cus_updateby='" & WebLib.LoginUser.replace("'", "''") & "'"
                insertvalues = insertvalues & ",cus_updatedt=getdate()"

                If cus_distributor.Enabled = True Then
                    insertvalues = insertvalues & ",cus_distributor='" & cus_distributor.Text.Replace("'", "''") & "'"
                End If

                If cus_customer.Enabled = True Then
                    insertvalues = insertvalues & ",cus_customer='" & cus_customer.Text.Replace("'", "''") & "'"
                End If
                If cus_location.Enabled = True Then
                    insertvalues = insertvalues & ",cus_location='" & cus_location.Text.Replace("'", "''") & "'"
                End If
                If cus_person.Enabled = True Then
                    insertvalues = insertvalues & ",cus_person='" & cus_person.Text.Replace("'", "''") & "'"
                End If
                If cus_telno.Enabled = True Then
                    insertvalues = insertvalues & ",cus_telno='" & cus_telno.Text.Replace("'", "''") & "'"
                End If
                If cus_dateofcomplaint.Enabled = True Then
                    insertvalues = insertvalues & ",cus_dateofcomplaint=" & lcusdateofcomplaint & ""

                End If
                If cus_product.Enabled = True Then
                    insertvalues = insertvalues & ",cus_product='" & cus_product.Text.Replace("'", "''") & "'"
                End If
                If cus_dono.Enabled = True Then
                    insertvalues = insertvalues & ",cus_dono='" & cus_dono.Text.Replace("'", "''") & "'"
                End If
                If cus_transporter.Enabled = True Then
                    insertvalues = insertvalues & ",cus_transporter='" & cus_transporter.Text.Replace("'", "''") & "'"
                End If
                If cus_qty.Enabled = True Then
                    insertvalues = insertvalues & ",cus_qty='" & cus_qty.Text.Replace("'", "''") & "'"
                End If
                If cus_description.Enabled = True Then
                    insertvalues = insertvalues & ",cus_description='" & cus_description.Text.Replace("'", "''") & "'"
                End If
                If wfb_bar.wlevelAPget().tostring.trim = "2" Then
                    insertvalues = insertvalues & ",cus_investigatordate=" & lcusinvestigatordate & ""

                End If
                If wfb_bar.wlevelAPget().tostring.trim = "3" Then
                    insertvalues = insertvalues & ",cus_valid='" & cus_valid.SelectedValue & "'"
                End If
                If wfb_bar.wlevelAPget().tostring.trim = "4" Then
                    insertvalues = insertvalues & ",cus_rootcause=" & IIf(cus_valid.SelectedValue = "Yes", 1, 0) & ""
                End If
                If wfb_bar.wlevelAPget().tostring.trim = "5" Then
                    insertvalues = insertvalues & ",cus_immediatedate=" & lcusimmediatedate & ""
                    insertvalues = insertvalues & ",cus_immediateaction='" & cus_immediateaction.SelectedValue & "'"
                    insertvalues = insertvalues & ",cus_dncnno='" & lcnno.Text & "'"
                End If
                If cus_hp.Enabled = True Then
                    insertvalues = insertvalues & ",cus_hp='" & cus_hp.Text.Replace("'", "''") & "'"
                End If
                If cus_classification.Enabled = True Then
                    insertvalues = insertvalues & ",cus_classification='" & cus_classification.SelectedValue & "'"
                End If
                If cus_complaint.Enabled = True Then
                    insertvalues = insertvalues & ",cus_complaint='" & cus_complaint.SelectedValue & "'"
                End If

                If wfb_bar.wlevelAPget().tostring.trim = "6" Then
                    insertvalues = insertvalues & ",cus_cusaccept='" & cus_cusaccept.Checked & "'"
                End If


            End If

            Dim lsqlcom As String = ""
            lsqlcom = lsqlcom & "'" & WebLib.LoginUser.replace("'", "''") & "'"

            If pWorkflowAction Then
                Select Case wfb_bar.wlevelAPget().tostring.trim
                    Case "2"
                        If cus_investigatordate.datevalue = New DateTime(1991, 1, 1) And cus_remarks.Text.ToString.Trim <> "" Then
                            lsqlcom = lsqlcom & ",'" & cus_remarks.Text.Replace("'", "''") & "'"
                        ElseIf cus_investigatordate.datevalue = New DateTime(1991, 1, 1) And cus_remarks.Text.ToString.Trim = "" Then
                            lsqlcom = lsqlcom & ",''"
                        ElseIf cus_investigatordate.datevalue <> New DateTime(1991, 1, 1) And cus_remarks.Text.ToString.Trim = "" Then
                            lsqlcom = lsqlcom & ",' Visit On - " & WebLib.formatthedate(cus_investigatordate.datevalue) & "'"
                        Else
                            lsqlcom = lsqlcom & ",'" & cus_remarks.Text.Replace("'", "''") & " ( Visit On - " & WebLib.formatthedate(cus_investigatordate.datevalue) & " )'"
                        End If
                    Case "3"
                        If cus_valid.SelectedValue.ToString.Trim = "Yes" And cus_remarks.Text.ToString.Trim <> "" Then
                            lsqlcom = lsqlcom & ",' Valid - " & cus_remarks.Text.Replace("'", "''") & "'"
                        ElseIf cus_valid.SelectedValue.ToString.Trim = "Yes" And cus_remarks.Text.ToString.Trim = "" Then
                            lsqlcom = lsqlcom & ",' Valid'"
                        ElseIf cus_valid.SelectedValue.ToString.Trim = "No" And cus_remarks.Text.ToString.Trim = "" Then
                            lsqlcom = lsqlcom & ",' Invalid'"
                        Else
                            lsqlcom = lsqlcom & ",' Invalid - " & cus_remarks.Text.Replace("'", "''") & "'"
                        End If
                    Case "4"
                        lsqlcom = lsqlcom & ", '" & cus_remarks.Text.Replace("'", "''")
                        If cus_rootcause.Checked = True Then
                            lsqlcom = lsqlcom & " (Root Cause Analysis attachment is mandatory for Valid case)'"
                        Else
                            lsqlcom = lsqlcom & "'"
                        End If
                    Case "5"
                        If cus_immediateaction.SelectedValue.ToString.Trim = "Compensate" Then
                            lsqlcom = lsqlcom & ",'Compensate '"
                        Else
                            lsqlcom = lsqlcom & ",'Not Compensate '"
                        End If
                    Case "6"
                        If cus_cusaccept.Checked = True Then
                            lsqlcom = lsqlcom & ",'Case accepted by Customer - " & cus_remarks.Text.Replace("'", "''") & "'"
                        Else
                            lsqlcom = lsqlcom & ",'Case not accepted by Customer - " & cus_remarks.Text.Replace("'", "''") & "'"
                        End If
                    Case Else
                        lsqlcom = lsqlcom & ",'" & IIf(cus_remarks.Text = "", "[Please refer to above section.]", cus_remarks.Text.Replace("'", "''")) & "'"
                End Select
            Else
                lsqlcom = lsqlcom & ",'" & IIf(cus_remarks.Text = "", "[Please refer to above section.]", cus_remarks.Text.Replace("'", "''")) & "'"

            End If

            lsqlcom = lsqlcom & ",getdate()"

            wfb_bar.postComments(lsqlcom, TableName, pWorkflowAction)


            If savedata(insertfields, insertvalues, True, lsql) = True Then
                If pType = "" Then
                    pType = "route"
                End If
                If pWorkflowAction = True Then
                    If wfb_bar.notifyusers(pType) = False Then

                    End If
                End If

                Response.Redirect("~/" & Redirector.Redirect(NmSpace, ucode.Value, False))
            Else
                lblMessage.Text = WebLib.getAlertMessageStyle("There is an error while saving. Please retry")
                'lblmessage.Text = WebLib.getAlertMessageStyle(WebLib.ErrorTrap & ":" & insertvalues & ":" & lsql)


            End If
        Catch Err As Exception
            lblMessage.Text = WebLib.getAlertMessageStyle(Err.Message)
        Finally

            '            ScriptManager.RegisterStartupScript(Me.GetType(), "uniqueid" & System.Guid.NewGuid.ToString, "<script>$.unblockUI();</script>")

        End Try


    End Sub
    Public Sub savepage(ByVal sender As System.Object, ByVal e As System.EventArgs)
        Call savedatadata(False, "")
    End Sub
    Protected Sub wfb_bar_OnApproveEvent(ByVal sender As Object, ByVal e As EventArgs) Handles wfb_bar.OnApproveEvent
        Call savedatadata(True, "Approve")
    End Sub
    Protected Sub wfb_bar_OnRejectEvent(ByVal sender As Object, ByVal e As EventArgs) Handles wfb_bar.OnRejectEvent
        Call savedatadata(True, "Reject")
    End Sub
    Protected Sub wfb_bar_OnCancelEvent(ByVal sender As Object, ByVal e As EventArgs) Handles wfb_bar.OnCancelEvent
        Call savedatadata(True, "Cancel")
    End Sub
    Public Sub loadpr()
        Try
            rep_comment.DataSource = wfb_bar.getComments2()
            rep_comment.DataBind()
            rep_audit.DataSource = wfb_bar.GetAuditLogsDs2()
            rep_audit.DataBind()

            '   rep_pr.DataSource = backend.getDocsDs(ucode.Value, "pq")
            '     rep_pr.DataBind()




        Catch ex As Exception
            lblMessage.Text = WebLib.getAlertMessageStyle(ex.Message)
        End Try


    End Sub
    Public Sub loaddraft()
        Try
            cus_remarks.Text = wfb_bar.getDraft2()

            '   rep_pr.DataSource = backend.getDocsDs(ucode.Value, "pq")
            '     rep_pr.DataBind()




        Catch ex As Exception
            lblMessage.Text = WebLib.getAlertMessageStyle(ex.Message)
        End Try


    End Sub

    Private Sub cus_classification_SelectedIndexChanged(sender As Object, e As EventArgs) Handles cus_classification.SelectedIndexChanged
        cus_complaint.Items.Clear()
        WebLib.setListItemsTable(cus_complaint, "cc_complaint", "cc_complaint", "mstrcustcomplaint", "cc_complaint asc", "", "", "'" & WebLib.FilterCode & "'", "cc_ccrtype = '" & FORMCODE & "' and cc_classification = '" & cus_classification.SelectedValue & "' group by cc_complaint ")
    End Sub

    Private Sub cus_immediateaction_SelectedIndexChanged(sender As Object, e As EventArgs) Handles cus_immediateaction.SelectedIndexChanged
        Call savedatadata(False, "")
        If cus_immediateaction.SelectedValue = "Compensate" Then
            btnCN.Visible = True
        Else
            btnCN.Visible = False
        End If
        
        cnpanel.update()

    End Sub

    Private Sub ShowCNDetail()
        Dim cn As New OleDbConnection(connectionstring)
        Dim cmd As New OleDbCommand()
        Dim ad As New OleDb.OleDbDataAdapter()
        Dim ds As New DataSet()
        Dim dr As DataRow
        Dim counter As Integer = 0

        Try
            cmd.CommandText = "select cus_id, cus_ucode, cus_uno, DateName(month, DateAdd(month, CAST(cus_cndnmth as int) , -1 ))  + ' ' + CAST(cus_cndnyear as nvarchar) as cndate, " &
                                        "cus_cndnamt, wst_status,  cus_createdt, case when wst_lastupdateon is null then  wst_createon else wst_lastupdateon end as statusdate " &
                                        "from zcustom_dncn cn inner join workflowstatus wfs on wst_ucode =cus_ucode " &
                                        "where cus_ccrno = '" & lblrefno.Text & "' " &
                                        "order by cus_createdt "

            ' case when wst_lastupdateon is null then  wst_createon else wst_lastupdateon end as statusdate 

            cmd.Connection = cn
            ad.SelectCommand = cmd

            ad.Fill(ds, "datarecords")

            Dim dt As DataTable = ds.Tables("datarecords")
            For Each dr In dt.Rows
                lcnid = dr.Item("cus_id") & ""
                lcnno.Text = dr.Item("cus_uno") & ""
                lcnstatus.Text = dr.Item("wst_status") & ""
            Next
            Dim dv As New DataView(dt)

            Dim pgitems As New PagedDataSource()
            pgitems.DataSource = dv

            rep.DataSource = pgitems
            rep.DataBind()

        Catch ex As Exception

        End Try

    End Sub
End Class

