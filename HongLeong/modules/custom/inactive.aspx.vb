Imports System.IO
Imports System.Data
Imports System.Data.SqlClient
Imports System.Data.OleDb
Imports System.Web
Imports System.Web.UI
Imports System.Web.UI.WebControls
Partial Public Class inactive_class
    Inherits detailspage
    Private FORMCODE As String = "INACTIVE"  'Hardcoded for customised form
    Private f_size As String
    Private f_securities As String = String.Empty & "|-Please Select-;;BG|BG;;CG|CG;;PG|PG"
    Private f_custype As String = "1|New;;2|Existing"


    'Generated by VI FEANDI SOFTLABS FORM GENERATOR (http://www.vifeandi.net) VER 2014.1
    Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load

        listingpage = "wlist.aspx"
        '_FormsName = "Inactive / Close Account or Return / Non-renewal of Collaterals Form"
        _FormsName = "Inactive / Close Account, Return / Non-Renewal of Collateral"
        TableName = "[zcustom_inactive]"
        IDPField = ""
        IDField = "cus_id"
        AppIDField = ""
        MerchantIDField = "cus_merchantid"
        FilterField = "cus_filter"
        APPCode = "WORKFLOW"
        AddRights = "" '"SM0001"
        DelRights = "" '"SM0003"
        ModRights = "" '"SM0002"
        ViewRights = "" '"SM0004"
        FullRights = "IN0005"
        NmSpace = "zcustom_inactive"

        Call validationgroup()
        wfb_bar.workflownamespace = NmSpace
        wfb_bar.custommode = True
        wfb_bar.overridemode = True

        wfb_bar.attachmentbycreatoronly = True

        cus_custype.Enabled = False
        If Page.IsPostBack = False Then
            lblrefno.Text = "<b>Auto Generated</b>"

            cus_refno.Text = Request("rc") & ""


            If (Request("wp2") & "").Trim <> "" Then '2 always use for custcode
                Dim obj As New RuntimeCustomer
                Call obj.getInfo((Request("wp2") & "").Trim)
                ccode.Value = (Request("wp2") & "").Trim
                cus_company.Text = obj.CustName & ""
                obj = Nothing
            Else


            End If
            cus_outbal.Text = "0.00"

            cus_accountholder.DataSource = backend.GetAccountHolders(WebLib.LoginUserCompanySelected)
            cus_accountholder.DataValueField = "salesrepcode"
            cus_accountholder.DataTextField = "usr_name"
            cus_accountholder.DataBind()
            cus_accountholder.Items.Insert(0, New ListItem("Please Select", ""))


        End If
        createdt.Value = DateTime.Now
        cus_refno.ReadOnly = True


        Call InitLoad()
        Call enabledisablecustomer()
        Call validationgroup()

        wfb_bar.parentobj = mp

        Call assigninitvalues()

        If (wfb_bar.canAction()) Then
            lvlvalid.Value = "True"
        Else
            lvlvalid.Value = "False"
        End If

        If (WebLib.LoginIsFullAdmin = True And wfb_bar.Workflowended = False) Or (IsNumeric(rid.Value) = False And cus_accountholder.SelectedValue = "") Then
            cus_accountholder.Enabled = True
        Else
            cus_accountholder.Enabled = False
        End If
        cus_remarks.ValidationGroup = wfb_bar.wlevelAget().tostring.trim & "-"



        loadpr()


    End Sub
    Private Sub validationgroup()
        ' find tagging if new, else find old 
        If rid.Value = "" Then

            Dim lvl As Integer = getlvl(2)
            cus_reasons.ValidationGroup = lvl & "-"
            cus_acctsince.ValidationGroup = lvl & "-"
            cus_sales.ValidationGroup = lvl & "-"
            cus_outbal.ValidationGroup = lvl & "-"
            cus_asat.ValidationGroup = lvl & "-"
            cus_dispute.ValidationGroup = lvl & "-"
            cus_disputeasat.ValidationGroup = lvl & "-"

        Else
            cus_reasons.ValidationGroup = backend.getLevelPC(2, rid.Value, NmSpace) & "-"
            cus_acctsince.ValidationGroup = backend.getLevelPC(2, rid.Value, NmSpace) & "-"
            cus_sales.ValidationGroup = backend.getLevelPC(2, rid.Value, NmSpace) & "-"
            cus_outbal.ValidationGroup = backend.getLevelPC(2, rid.Value, NmSpace) & "-"
            cus_asat.ValidationGroup = backend.getLevelPC(2, rid.Value, NmSpace) & "-"
            cus_dispute.ValidationGroup = backend.getLevelPC(2, rid.Value, NmSpace) & "-"
            cus_disputeasat.ValidationGroup = backend.getLevelPC(2, rid.Value, NmSpace) & "-"
        End If
    End Sub
    Private Function getlvl(ByVal lvl As Integer) As Integer

        Dim str As String = "select wui_no from workflowlink l inner join workflowitems i on l.wfl_wflowid = i.wui_wid where wfl_subcode = '" + FORMCODE + "' and wui_pno = " + lvl.ToString + ""

        Dim cn As New OleDbConnection(connectionstring)
        Dim cmd As New OleDbCommand()
        Dim ad As New OleDb.OleDbDataAdapter()
        Dim ds As New DataSet()
        Try
            cmd.CommandText = str
            cmd.Connection = cn
            ad.SelectCommand = cmd
            ad.Fill(ds, "datarecords")
            For Each dr As DataRow In ds.Tables("datarecords").Rows

                Return dr("wui_no") & ""

            Next
            cn.Close()
            cmd.Dispose()
            cn.Dispose()

        Catch ex As Exception
            ' lblMessage.Text = WebLib.getAlertMessageStyle(ex.Message)
            Return 0
        End Try
    End Function
    Private Sub enabledisablecustomer()
        cus_company.Enabled = True
    End Sub
    Private Function ValidateForm()
        lblMessage.Text = ""

        If cus_outbal.Enabled = True Then
            If IsNumeric(cus_outbal.Text) = False Then
                lblMessage.Text = WebLib.getAlertMessageStyle("Please Enter Outstanding Balance")
                Return False
            End If
        End If


        If cus_asat.enabled = True Then
            If (cus_asat.textdmy) <> "" Then
                If cus_asat.datevalue = New DateTime(1991, 1, 1) Then
                    lblMessage.Text = WebLib.getAlertMessageStyle("Please Enter Outstanding Balance As At")
                    Return False
                End If
            End If
        End If
        If cus_disputeasat.enabled = True Then
            If (cus_disputeasat.textdmy) <> "" Then
                If cus_disputeasat.datevalue = New DateTime(1991, 1, 1) Then
                    lblMessage.Text = WebLib.getAlertMessageStyle("Please Enter Dispute (Diversion,RMA) As At")
                    Return False
                End If
            End If
        End If

        Return True
    End Function
    Public Sub SetFieldRights()
        Call wfb_bar.EnableDisable(mp)
        Exit Sub
    End Sub
    Private Sub assigninitvalues()

        If cus_asat.enabled = False And (cus_asat.value & "").trim = "" Then
            cus_asat.textdmy = ""
        End If
        If cus_disputeasat.enabled = False And (cus_disputeasat.value & "").trim = "" Then
            cus_disputeasat.textdmy = ""
        End If

    End Sub

    Public Sub backpagepage(ByVal sender As System.Object, ByVal e As System.EventArgs)
        Response.Redirect(WebLib.ClientURL(Redirector.PrevURL1))
    End Sub

    Public Overrides Function LoadData() As Boolean
        Dim cn As New OleDbConnection(connectionstring)
        Dim cmd As New OleDbCommand()
        Dim ad As New OleDb.OleDbDataAdapter()
        Dim ds As New DataSet()
        Dim counter As Integer = 0
        Dim dr As DataRow
        Dim templi As ListItem
        If IsNumeric(rid.Value) = False Then
            wfb_bar.uid = ""
            Call SetFieldRights()
            cus_accountholder.SelectedValue = backend.GetAccountHolder((Request("wp2") & "").Trim)
            Exit Function
        End If

        Try
            cmd.CommandText = "Select * from " & TableName & " where cus_id=" & rid.Value
            cmd.Connection = cn
            ad.SelectCommand = cmd
            ad.Fill(ds, "datarecords")
            For Each dr In ds.Tables("datarecords").Rows

                counter = counter + 1
                cus_company.Text = dr("cus_company") & ""



                ccode.Value = dr("cus_custcode") & ""

                ucode.Value = dr("cus_ucode") & ""
                'cus_remarks2.Text = dr("cus_remarks2") & ""
                'cus_remarks3.Text = dr("cus_remarks3") & ""
                'cus_remarks4.Text = dr("cus_remarks4") & ""
                'cus_remarks5.Text = dr("cus_remarks5") & ""
                'cus_remarks6.Text = dr("cus_remarks6") & ""

                'cus_remarks7.Text = dr("cus_remarks7") & ""

                'cus_remarks7.Text = dr("cus_remarks8") & ""

                cus_reasons.Text = dr("cus_reasons") & ""
                cus_acctsince.Text = dr("cus_acctsince") & ""
                Try
                    cus_outbal.Text = WebLib.formatthemoney(CDbl(dr("cus_outbal") & ""))

                Catch ex As Exception

                End Try
                Try
                    cus_disputeasat.Textdmy = dr("cus_disputeasat") & ""
                Catch ex As Exception

                End Try
                cus_sales.Text = dr("cus_sales") & ""
                cus_dispute.Text = dr("cus_dispute") & ""


                cus_refno.Text = dr("cus_refno") & ""
                lblrefno.Text = dr("cus_uno") & ""


                Try
                    cus_asat.Textdmy = dr("cus_asat") & ""
                Catch ex As Exception

                End Try





                wfb_bar.uid = ucode.Value
                cus_accountholder.SelectedValue = dr("cus_accountholder") & ""
                createdt.Value = dr("cus_createdt").ToString.Trim



                Exit For
            Next
            cn.Close()
            cmd.Dispose()
            cn.Dispose()
            If wfb_bar.Workflowended = True Then
                btnsave.enabled = False
            Else
                btnsave.enabled = True
            End If

            Call SetFieldRights()
            Call enabledisablecustomer()

            loaddraft()

        Catch ex As Exception
            lblMessage.Text = WebLib.getAlertMessageStyle(ex.Message)
        End Try
    End Function
    Private Sub savedatadata(ByVal pWorkflowAction As Boolean, ByVal pType As String)

        Dim insertfields, insertvalues As String
        Dim lsrdesc As String = ""
        Dim lsql As String = ""



        insertfields = ""
        insertvalues = ""
        If ValidateForm() = False Then
            Exit Sub
        End If


        Dim lcus_outbalt As String
        If IsNumeric(cus_outbal.Text) = False Then
            lcus_outbalt = "NULL"
        Else
            lcus_outbalt = CDbl(cus_outbal.Text)
        End If

        Dim lAsAt As String = ""
        If cus_asat.datevalue = New DateTime(1991, 1, 1) Then
            lAsAt = "NULL"
        Else
            lAsAt = "'" & WebLib.formatthedate(cus_asat.datevalue) & "'"
        End If



        Dim lcus_disputeasat As String = ""
        If cus_disputeasat.datevalue = New DateTime(1991, 1, 1) Then
            lcus_disputeasat = "NULL"
        Else
            lcus_disputeasat = "'" & WebLib.formatthedate(cus_disputeasat.datevalue) & "'"
        End If


        Try
            If rid.Value = "" Then
                ucode.Value = WebLib.getUniqueKey
                Dim lID As String
                Dim lDocno As String = ""
                lDocno = WebLib.GetDocNo(NmSpace, "cus_uno", APPCode) & ""

                If lDocno.Trim = "" Then
                    lblMessage.Text = WebLib.getAlertMessageStyle("Document No. Not Set")
                    Exit Sub
                End If
                lID = WebLib.GetValue("Workflowlink", "wfl_wflowid", "wfl_subcode", "'" & FORMCODE & "'", "", "")

                If IsNumeric(lID) = False Or (lID & "").Trim = "0" Then
                    lblMessage.Text = WebLib.getAlertMessageStyle("No Workflow Assign for this form")
                    Exit Sub
                End If


                lsql = wfb_bar.GetWorkFlowSaveSQL(lID, ucode.Value, True, cus_refno.Text, NmSpace, "Inactive / Close Account", cus_company.Text, lDocno)



                insertfields = insertfields & "cus_merchantid"
                insertvalues = insertvalues & "'" & ccode.Value.Replace("'", "''") & "'"
                insertfields = insertfields & ",cus_uno"
                insertvalues = insertvalues & ",'" & lDocno & "'"
                insertfields = insertfields & ",cus_filter"
                insertvalues = insertvalues & ",'" & WebLib.FilterCode.replace("'", "''") & "'"
                insertfields = insertfields & ",cus_ucode"
                insertvalues = insertvalues & ",'" & ucode.Value & "'"
                insertfields = insertfields & ",cus_custcode"
                insertvalues = insertvalues & ",'" & ccode.Value.Replace("'", "''") & "'"
                insertfields = insertfields & ",cus_company"
                insertvalues = insertvalues & ",'" & cus_company.Text.Replace("'", "''") & "'"

                insertfields = insertfields & ",cus_refno"
                insertvalues = insertvalues & ",'" & cus_refno.Text.Replace("'", "''") & "'"
                'insertfields = insertfields & ",cus_remarks2"
                'insertvalues = insertvalues & ",'" & cus_remarks2.Text.Replace("'", "''") & "'"
                'insertfields = insertfields & ",cus_remarks3"
                'insertvalues = insertvalues & ",'" & cus_remarks3.Text.Replace("'", "''") & "'"
                'insertfields = insertfields & ",cus_remarks4"
                'insertvalues = insertvalues & ",'" & cus_remarks4.Text.Replace("'", "''") & "'"
                'insertfields = insertfields & ",cus_remarks5"
                'insertvalues = insertvalues & ",'" & cus_remarks5.Text.Replace("'", "''") & "'"
                'insertfields = insertfields & ",cus_remarks6"
                'insertvalues = insertvalues & ",'" & cus_remarks6.Text.Replace("'", "''") & "'"
                'insertfields = insertfields & ",cus_remarks7"
                'insertvalues = insertvalues & ",'" & cus_remarks7.Text.Replace("'", "''") & "'"

                'insertfields = insertfields & ",cus_remarks8"
                'insertvalues = insertvalues & ",'" & cus_remarks8.Text.Replace("'", "''") & "'"


                insertfields = insertfields & ",cus_asat"
                insertvalues = insertvalues & "," & lAsAt & ""
                insertfields = insertfields & ",cus_disputeasat"
                insertvalues = insertvalues & "," & lcus_disputeasat & ""
                insertfields = insertfields & ",cus_outbal"
                insertvalues = insertvalues & "," & lcus_outbalt & ""
                insertfields = insertfields & ",cus_reasons"
                insertvalues = insertvalues & ",'" & cus_reasons.Text.Replace("'", "''") & "'"
                insertfields = insertfields & ",cus_acctsince"
                insertvalues = insertvalues & ",'" & cus_acctsince.Text.Replace("'", "''") & "'"
                insertfields = insertfields & ",cus_sales"
                insertvalues = insertvalues & ",'" & cus_sales.Text.Replace("'", "''") & "'"
                insertfields = insertfields & ",cus_dispute"
                insertvalues = insertvalues & ",'" & cus_dispute.Text.Replace("'", "''") & "'"

                insertfields = insertfields & ",cus_createby"
                insertvalues = insertvalues & ",'" & WebLib.LoginUser.replace("'", "''") & "'"
                insertfields = insertfields & ",cus_createdt"
                insertvalues = insertvalues & ",getdate()"
                insertfields = insertfields & ",cus_updateby"
                insertvalues = insertvalues & ",'" & WebLib.LoginUser.replace("'", "''") & "'"
                insertfields = insertfields & ",cus_updatedt"
                insertvalues = insertvalues & ",getdate()"
                insertfields = insertfields & ",cus_accountholder"
                insertvalues = insertvalues & ",'" & cus_accountholder.SelectedValue & "'"

            Else
                If pWorkflowAction = True Then
                    lsql = wfb_bar.getapprovesql(pType)
                End If
                insertvalues = insertvalues & "cus_updateby='" & WebLib.LoginUser.replace("'", "''") & "'"
                insertvalues = insertvalues & ",cus_updatedt=getdate()"
                If cus_company.Enabled = True Then
                    insertvalues = insertvalues & ",cus_company='" & cus_company.Text.Replace("'", "''") & "'"
                End If

                If cus_dispute.Enabled = True Then
                    insertvalues = insertvalues & ",cus_dispute='" & cus_dispute.Text.Replace("'", "''") & "'"
                End If
                If cus_sales.Enabled = True Then
                    insertvalues = insertvalues & ",cus_sales='" & cus_sales.Text.Replace("'", "''") & "'"
                End If
                If cus_acctsince.Enabled = True Then
                    insertvalues = insertvalues & ",cus_acctsince='" & cus_acctsince.Text.Replace("'", "''") & "'"
                End If
                If cus_reasons.Enabled = True Then
                    insertvalues = insertvalues & ",cus_reasons='" & cus_reasons.Text.Replace("'", "''") & "'"
                End If

                If cus_outbal.Enabled = True Then
                    insertvalues = insertvalues & ",cus_outbal=" & lcus_outbalt & ""
                End If

                If cus_asat.Enabled = True Then
                    insertvalues = insertvalues & ",cus_asat=" & lAsAt & ""
                End If
                If cus_disputeasat.Enabled = True Then
                    insertvalues = insertvalues & ",cus_disputeasat=" & lcus_disputeasat & ""
                End If

                'If cus_remarks2.Enabled = True Then
                '    insertvalues = insertvalues & ",cus_remarks2='" & cus_remarks2.Text.Replace("'", "''") & "'"
                'End If
                'If cus_remarks3.Enabled = True Then
                '    insertvalues = insertvalues & ",cus_remarks3='" & cus_remarks3.Text.Replace("'", "''") & "'"
                'End If
                'If cus_remarks4.Enabled = True Then
                '    insertvalues = insertvalues & ",cus_remarks4='" & cus_remarks4.Text.Replace("'", "''") & "'"
                'End If
                'If cus_remarks5.Enabled = True Then
                '    insertvalues = insertvalues & ",cus_remarks5='" & cus_remarks5.Text.Replace("'", "''") & "'"
                'End If
                'If cus_remarks6.Enabled = True Then
                '    insertvalues = insertvalues & ",cus_remarks6='" & cus_remarks6.Text.Replace("'", "''") & "'"
                'End If

                'If cus_remarks7.Enabled = True Then
                '    insertvalues = insertvalues & ",cus_remarks7='" & cus_remarks7.Text.Replace("'", "''") & "'"
                'End If

                'If cus_remarks8.Enabled = True Then
                '    insertvalues = insertvalues & ",cus_remarks8='" & cus_remarks8.Text.Replace("'", "''") & "'"
                'End If
                If cus_accountholder.Enabled = True Then
                    insertvalues = insertvalues & ",cus_accountholder='" & cus_accountholder.SelectedValue & "'"
                End If


            End If


            Dim lsqlcom As String = ""
            lsqlcom = lsqlcom & "'" & WebLib.LoginUser.replace("'", "''") & "'"
            lsqlcom = lsqlcom & ",'" & IIf(cus_remarks.Text = "", "[Please refer to above section.]", cus_remarks.Text.Replace("'", "''")) & "'"
            lsqlcom = lsqlcom & ",getdate()"

            wfb_bar.postComments(lsqlcom, TableName, pWorkflowAction)

            If savedata(insertfields, insertvalues, True, lsql) = True Then
                If pType = "" Then
                    pType = "route"
                End If

                If pWorkflowAction = True Then
                    If wfb_bar.notifyusers(pType) = False Then

                    End If
                End If
                Response.Redirect("~/" & Redirector.Redirect(NmSpace, ucode.Value, False))
            Else
                lblMessage.Text = WebLib.getAlertMessageStyle("There is an error while saving. Please retry")

            End If
        Catch Err As Exception
            lblMessage.Text = WebLib.getAlertMessageStyle(Err.Message)
        Finally

        End Try

    End Sub
    Public Sub savepage(ByVal sender As System.Object, ByVal e As System.EventArgs)
        Call savedatadata(False, "")
    End Sub
    Protected Sub wfb_bar_OnApproveEvent(ByVal sender As Object, ByVal e As EventArgs) Handles wfb_bar.OnApproveEvent
        Call savedatadata(True, "Approve")
    End Sub
    Protected Sub wfb_bar_OnRejectEvent(ByVal sender As Object, ByVal e As EventArgs) Handles wfb_bar.OnRejectEvent
        Call savedatadata(True, "Reject")
    End Sub
    Protected Sub wfb_bar_OnCancelEvent(ByVal sender As Object, ByVal e As EventArgs) Handles wfb_bar.OnCancelEvent
        Call savedatadata(True, "Cancel")
    End Sub
    Public Sub loadpr()
        Try
            rep_comment.DataSource = wfb_bar.getComments2()
            rep_comment.DataBind()
            rep_audit.DataSource = wfb_bar.GetAuditLogsDs2()
            rep_audit.DataBind()

            '   rep_pr.DataSource = backend.getDocsDs(ucode.Value, "pq")
            '     rep_pr.DataBind()




        Catch ex As Exception
            lblMessage.Text = WebLib.getAlertMessageStyle(ex.Message)
        End Try


    End Sub
    Public Sub loaddraft()
        Try
            cus_remarks.Text = wfb_bar.getDraft2()

            '   rep_pr.DataSource = backend.getDocsDs(ucode.Value, "pq")
            '     rep_pr.DataBind()




        Catch ex As Exception
            lblMessage.Text = WebLib.getAlertMessageStyle(ex.Message)
        End Try


    End Sub
End Class

